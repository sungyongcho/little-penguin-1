#include <linux/module.h>
#include <linux/kernel.h>
#include <linux/init.h>
#include <linux/proc_fs.h>
#include <linux/fs.h>
#include <linux/sched.h>
#include <linux/seq_file.h>
#include <linux/mount.h>

MODULE_LICENSE("LICENSE");
MODULE_AUTHOR("Sungyong Cho <sucho@student.42.fr>");
MODULE_DESCRIPTION("little-penguin-1 assignment-09");

#define MYMOUNTS_NAME "mymounts"

static int mymounts_show(struct seq_file *m, void *v)
{
	    struct vfsmount *mnt;
	        for (mnt = current->fs->root.mnt; mnt; mnt = mnt->mnt_next) {
			        seq_printf(m, "%s %s\n", mnt->mnt_mountpoint->d_name.name, mnt->mnt_root->d_name.name);
				    }
		    return 0;
}

static int mymounts_open(struct inode *inode, struct file *file)
{
	    return single_open(file, mymounts_show, NULL);
}

static const struct file_operations mymounts_fops = {
	    .owner = THIS_MODULE,
	        .open = mymounts_open,
		    .read = seq_read,
		        .llseek = seq_lseek,
			    .release = single_release,
};

static int __init mymounts_init(void)
{
	    proc_create(MYMOUNTS_NAME, 0, NULL, &mymounts_fops);
	        return 0;
}

static void __exit mymounts_exit(void)
{
	    remove_proc_entry(MYMOUNTS_NAME, NULL);
}

module_init(mymounts_init);
module_exit(mymounts_exit);
